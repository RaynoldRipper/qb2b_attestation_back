(self["webpackChunkquasar_app"]=self["webpackChunkquasar_app"]||[]).push([[509],{3509:(t,e,s)=>{"use strict";s.r(e),s.d(e,{default:()=>W});var r=s(3673);function i(t,e,s,i,a,u){const n=(0,r.up)("ColorTableComponent");return(0,r.wg)(),(0,r.j4)(n)}const a={class:"container container-md"};function u(t,e,s,i,u,n){const l=(0,r.up)("Timer"),c=(0,r.up)("ColorTableInfo"),h=(0,r.up)("ColorTableGenerate");return(0,r.wg)(),(0,r.iD)("div",a,[(0,r.Wm)(l,{testStatus:u.testStatus,currentTime:u.currentTime,timeLeft:u.timeLeft,timer:u.timer,onTimerSync:n.syncTimer,ref:"start"},null,8,["testStatus","currentTime","timeLeft","timer","onTimerSync"]),(0,r.Wm)(c,{testStatus:u.testStatus,userArray:u.userArray,onTimerStart:n.startTimer,onChangeStatus:n.changeStatus},null,8,["testStatus","userArray","onTimerStart","onChangeStatus"]),(0,r.Wm)(h,{red:u.red,black:u.black,testStatus:u.testStatus,onPushData:n.syncData},null,8,["red","black","testStatus","onPushData"])])}var n=s(2323);const l={key:0,class:"flex-container"},c={class:"table"},h=["data-index"];function m(t,e,s,i,a,u){return"FINISHED"!==s.testStatus?((0,r.wg)(),(0,r.iD)("div",l,[(0,r._)("div",c,[((0,r.wg)(!0),(0,r.iD)(r.HY,null,(0,r.Ko)(this.fullObject,((t,e)=>((0,r.wg)(),(0,r.iD)("div",{class:(0,n.C_)(["table-item",t.color]),key:t,"data-index":e},(0,n.zw)(t.letter)+"-"+(0,n.zw)(t.number),11,h)))),128))])])):(0,r.kq)("",!0)}s(71);var o=s(3617);function S(t){let e,s=t.length;while(0!=s)e=Math.floor(Math.random()*s),s--,[t[s],t[e]]=[t[e],t[s]];return t}const T={data(){return{redSuccess:[],blackSuccess:[],fullSuccess:[],userArray:[],fullObject:[],results:{},alphabet:"а б в г д е ё ж з и й к л м н о п р с т у ф х ц ч ш щ ъ ы ь э ю я".split(" ")}},emits:["push-data"],props:{red:Number,black:Number,testStatus:String},methods:{...(0,o.nv)("tests",["saveUserTest"]),dataGenerator(){for(let e=0;e<this.red;e++){let t=this.alphabet[Math.floor(Math.random()*this.alphabet.length)];this.redSuccess.push(t)}for(let e=0;e<this.black;e++){let t=this.alphabet[Math.floor(Math.random()*this.alphabet.length)];this.blackSuccess.push(t)}let t=this.blackSuccess.length>this.redSuccess.length?this.blackSuccess.length:this.redSuccess.length;for(let e=0;e<t;e++){if("undefined"!==typeof this.redSuccess[e]){let t={color:"red",number:this.redSuccess.length-e,letter:this.redSuccess[e]};this.fullSuccess.push(this.redSuccess[e]),this.fullObject.push(t)}if("undefined"!==typeof this.blackSuccess[e]){let t={color:"black",number:e+1,letter:this.blackSuccess[e]};this.fullSuccess.push(this.blackSuccess[e]),this.fullObject.push(t)}}S(this.fullObject)},userCheck(t){if("PROCESS"===this.testStatus){let e=t.target;this.userArray.push(this.fullObject[e.dataset.index].letter),this.$emit("push-data",{fullSuccess:this.fullSuccess,userArray:this.userArray,testStatus:this.testStatus})}},keyDown(t){let e="а б в г д е ё ж з и й к л м н о п р с т у ф х ц ч ш щ ъ ы ь э ю я ",s=(e.toUpperCase()+e).split(" ");if("PROCESS"===this.testStatus)if(-1!==s.indexOf(t.key)){let e=t.key.toLowerCase();this.userArray.push(e),this.$emit("push-data",{fullSuccess:this.fullSuccess,userArray:this.userArray,testStatus:this.testStatus})}else"Backspace"===t.code&&(this.userArray.splice(-1,1),this.$emit("push-data",{fullSuccess:this.fullSuccess,userArray:this.userArray,testStatus:this.testStatus}))}},computed:{...(0,o.Se)("user",["getUser"]),...(0,o.Se)("tests",["attestationId"])},mounted(){null===this.attestationId&&this.$router.push("/tests")},created(){document.addEventListener("keydown",this.keyDown)},watch:{testStatus(){if("STARTED"===this.testStatus&&this.dataGenerator(),"FINISHED"===this.testStatus){this.results["symbols"]=this.userArray.length,this.results["successSymbols"]=0,this.userArray.forEach(((t,e)=>{t==this.fullSuccess[e]&&(this.results["successSymbols"]=this.results["successSymbols"]+1)}));let t={fullSuccess:this.fullSuccess,userArray:this.userArray,results:this.results,table:!0,test_id:2,user_id:this.getUser.id,attestation_id:this.attestationId};this.saveUserTest(t).then((t=>{this.$router.push("/tests")}))}}}};T.render=m;const d=T;var f=s(1478),w=s.n(f);const p={class:"info text-center"},y={key:0},b=(0,r._)("h4",{class:"text-center"},"Тест красно-черная таблица",-1),g=(0,r._)("p",{class:"info__text"},' Необходимо отыскивать красные и черные числа попеременно, причём, красные в убывающем порядке, от 25 до 1, а черные в возрастающем — от 1 до 24. Записывать надо только буквы, стоящие рядом с числами. Время работы — 5 минут". ',-1),k=(0,r._)("p",{class:"sub-text"},"Снизу показан пример",-1),A=(0,r._)("img",{class:"img",alt:"Test 2",src:w()},null,-1),D=[b,g,k,A],C={key:1,class:""},I=(0,r._)("p",{class:"text-center"},[(0,r._)("b",null,"Записаные буквы")],-1),v={class:"info__text text-left"},_={key:2,class:"buttons-wrap"};function E(t,e,s,i,a,u){return(0,r.wg)(),(0,r.iD)("div",p,["WAITING"===s.testStatus?((0,r.wg)(),(0,r.iD)("div",y,D)):"STARTED"===s.testStatus||"PROCESS"===s.testStatus?((0,r.wg)(),(0,r.iD)("div",C,[I,(0,r._)("p",v,[((0,r.wg)(!0),(0,r.iD)(r.HY,null,(0,r.Ko)(s.userArray,(t=>((0,r.wg)(),(0,r.iD)("span",{class:"info__symbol",key:t},(0,n.zw)(t),1)))),128))])])):(0,r.kq)("",!0),"WAITING"===s.testStatus||"FINISHED"===s.testStatus||"STORAGE"===s.testStatus?((0,r.wg)(),(0,r.iD)("div",_,["WAITING"===s.testStatus?((0,r.wg)(),(0,r.iD)("button",{key:0,class:"btn btn--main",onClick:e[0]||(e[0]=(...t)=>u.startTimer&&u.startTimer(...t))},"Я готов(-а), начать!")):(0,r.kq)("",!0)])):(0,r.kq)("",!0)])}const L={emits:["timer-start","change-status"],props:{testStatus:String,userArray:Array},methods:{startTimer(){this.$emit("timer-start"),this.$emit("change-status","STARTED")},sendToServer(){}}};L.render=E;const O=L,N={key:0,class:"timer-wrapper timer-wrapper--sticky"},x={key:0,class:"timer"},$={key:1,class:"timer-out"};function G(t,e,s,i,a,u){return"STORAGE"!==s.testStatus?((0,r.wg)(),(0,r.iD)("div",N,[s.currentTime>0?((0,r.wg)(),(0,r.iD)("div",x,(0,n.zw)(u.timerStyle()),1)):0===s.currentTime?((0,r.wg)(),(0,r.iD)("div",$,"Время вышло!")):(0,r.kq)("",!0)])):(0,r.kq)("",!0)}const R={data(){return{newTime:this.currentTime,newTimeLeft:this.timeLeft,newTimer:this.timer,newTimerStatus:0}},props:{currentTime:Number,timeLeft:Number,timer:Number,testStatus:String},emits:["timer-sync"],methods:{timerStyle(){let t=Math.floor(this.newTime/60)>9?Math.floor(this.newTime/60):"0"+Math.floor(this.newTime/60),e=this.newTime-60*t>9?this.newTime-60*t:"0"+(this.newTime-60*t).toString();return`${t}:${e}`},startTimer(){0==this.newTimerStatus&&0!==this.newTime&&(this.newTimer=setInterval((()=>{this.newTimerStatus=1,this.newTime--,this.newTimeLeft++,this.$emit("timer-sync",{newTime:this.newTime,newTimeLeft:this.newTimeLeft,newTimer:this.newTimer,newTimerStatus:this.newTimerStatus,testStatus:"PROCESS"})}),1e3))},stopTimer(){clearTimeout(this.newTimer);let t=0!==this.newTime?"PROCESS":"FINISHED";this.newTimerStatus=0,this.$emit("timer-sync",{newTime:this.newTime,newTimeLeft:this.newTimeLeft,newTimer:this.newTimer,newTimerStatus:this.newTimerStatus,testStatus:t})}},unmounted(){this.stopTimer()},mounted(){},watch:{newTime(t){0===t&&this.stopTimer()}}};R.render=G;const M=R,q={data(){return{currentTime:300,timeLeft:0,timer:null,timerStatus:0,red:25,black:24,userArray:[],fullSuccess:[],testStatus:"WAITING"}},components:{ColorTableGenerate:d,ColorTableInfo:O,Timer:M},methods:{syncTimer(t){this.currentTime=t.newTime,this.timeLeft=t.newTimeLeft,this.timer=t.newTimer,this.timerStatus=t.newTimerStatus,this.testStatus=t.testStatus},syncData(t){this.userArray=t.userArray,this.fullSuccess=t.fullSuccess,this.testStatus=t.testStatus},startTimer(){this.$refs.start.startTimer()},changeStatus(t){this.testStatus=t}},mounted(){if("undefined"!==typeof localStorage.table){let t=JSON.parse(localStorage.table);this.fullSuccess=t.fullSuccess,this.userArray=t.userArray,this.testStatus="STORAGE"}}};q.render=u;const j=q,P={components:{ColorTableComponent:j}};P.render=i;const W=P},1478:(t,e,s)=>{t.exports=s.p+"img/test-2.aa4dc493.gif"}}]);